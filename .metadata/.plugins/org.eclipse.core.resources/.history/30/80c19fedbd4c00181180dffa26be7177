package com.scp.QuestionSet.DuplicateKeyInHashMap;

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;

public class DuplicateKeyInHashMap {
	public static void main(String[] args) {
		HashSet<A> hashSet = new HashSet();
		A a = new A(10);
		System.out.println(hashSet.add(a));
		System.out.println(hashSet.add(a));
		System.out.println(hashSet.add(a));

		System.out.println(hashSet.size());

		/*
		 * HashSet is allowing duplicate elements here because in the background
		 * there HashSet used HashMap to store elements HashSet compares the
		 * elements using hashCode of key of the elements passed to it, if the
		 * hash code of the existing key matches the new key it dosen't allow
		 * insertion of the object Here we are overriding the hashCode() in
		 * class A, and returning the random number as
		 * 
		 */

	}
}

class A {

	int x;

	A(int x) {
		this.x = x;
	}

	@Override
	public int hashCode() {
		Calendar calendar = Calendar.getInstance();
		long x = calendar.getTimeInMillis();
		Random rand = new Random();
		int n = (int) (rand.nextInt(50000) + x);
		return n;
	}
}
